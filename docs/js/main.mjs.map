{
  "version": 3,
  "sources": ["../../src/js/solarCalculator.mjs", "../../src/js/romanClock.mjs", "../../src/js/timezonePosition.mjs", "../../src/js/lib.mjs", "../../src/js/locale.mjs", "../../src/js/viewHelpers.mjs", "../../src/js/view.mjs", "../../src/js/main.mjs"],
  "sourcesContent": ["/*\nNOAA Solar Calculator,\nprovided by Global Monitoring Laboratory of the National Oceanic and Atmospheric Administration (NOAA),\nBoulder, Colorado, USA (https://gml.noaa.gov).\n\nTo the best of my knowledge, the NOAA Solar Calculator code is in the public domain.\nThe original code has been preserved with only minimal changes to support potential future updates or merges.\n*/\n\n/*************************************************************/\n/* Solar position calculation functions */\n/*************************************************************/\n\nfunction calcTimeJulianCent(jd) {\n\tvar T = (jd - 2451545.0)/36525.0\n\treturn T\n}\n\nfunction calcJDFromJulianCent(t) {\n\tvar JD = t * 36525.0 + 2451545.0\n\treturn JD\n}\n\nfunction isLeapYear(yr) {\n\treturn ((yr % 4 == 0 && yr % 100 != 0) || yr % 400 == 0);\n}\n\nfunction calcDateFromJD(jd) {\n\tvar z = Math.floor(jd + 0.5);\n\tvar f = (jd + 0.5) - z;\n\tvar A;\n\tif (z < 2299161) {\n\t\tA = z;\n\t} else {\n\t\tvar alpha = Math.floor((z - 1867216.25)/36524.25);\n\t\tA = z + 1 + alpha - Math.floor(alpha/4);\n\t}\n\tvar B = A + 1524;\n\tvar C = Math.floor((B - 122.1)/365.25);\n\tvar D = Math.floor(365.25 * C);\n\tvar E = Math.floor((B - D)/30.6001);\n\tvar day = B - D - Math.floor(30.6001 * E) + f;\n\tvar month = (E < 14) ? E - 1 : E - 13;\n\tvar year = (month > 2) ? C - 4716 : C - 4715;\n\n\treturn {\"year\": year, \"month\": month, \"day\": day}\n}\n\nfunction calcDoyFromJD(jd) {\n\tvar date = calcDateFromJD(jd)\n\n\tvar k = (isLeapYear(date.year) ? 1 : 2);\n\tvar doy = Math.floor((275 * date.month)/9) - k * Math.floor((date.month + 9)/12) + date.day -30;\n\n\treturn doy;\n}\n\n\nfunction radToDeg(angleRad) {\n\treturn (180.0 * angleRad / Math.PI);\n}\n\nfunction degToRad(angleDeg) {\n\treturn (Math.PI * angleDeg / 180.0);\n}\n\nfunction calcGeomMeanLongSun(t) {\n\tvar L0 = 280.46646 + t * (36000.76983 + t*(0.0003032))\n\twhile(L0 > 360.0) {\n\t\tL0 -= 360.0\n\t}\n\twhile(L0 < 0.0) {\n\t\tL0 += 360.0\n\t}\n\treturn L0\t\t// in degrees\n}\n\nfunction calcGeomMeanAnomalySun(t) {\n\tvar M = 357.52911 + t * (35999.05029 - 0.0001537 * t);\n\treturn M;\t\t// in degrees\n}\n\nfunction calcEccentricityEarthOrbit(t) {\n\tvar e = 0.016708634 - t * (0.000042037 + 0.0000001267 * t);\n\treturn e;\t\t// unitless\n}\n\nfunction calcSunEqOfCenter(t) {\n\tvar m = calcGeomMeanAnomalySun(t);\n\tvar mrad = degToRad(m);\n\tvar sinm = Math.sin(mrad);\n\tvar sin2m = Math.sin(mrad+mrad);\n\tvar sin3m = Math.sin(mrad+mrad+mrad);\n\tvar C = sinm * (1.914602 - t * (0.004817 + 0.000014 * t)) + sin2m * (0.019993 - 0.000101 * t) + sin3m * 0.000289;\n\treturn C;\t\t// in degrees\n}\n\nfunction calcSunTrueLong(t) {\n\tvar l0 = calcGeomMeanLongSun(t);\n\tvar c = calcSunEqOfCenter(t);\n\tvar O = l0 + c;\n\treturn O;\t\t// in degrees\n}\n\nfunction calcSunTrueAnomaly(t) {\n\tvar m = calcGeomMeanAnomalySun(t);\n\tvar c = calcSunEqOfCenter(t);\n\tvar v = m + c;\n\treturn v;\t\t// in degrees\n}\n\nfunction calcSunRadVector(t) {\n\tvar v = calcSunTrueAnomaly(t);\n\tvar e = calcEccentricityEarthOrbit(t);\n\tvar R = (1.000001018 * (1 - e * e)) / (1 + e * Math.cos(degToRad(v)));\n\treturn R;\t\t// in AUs\n}\n\nfunction calcSunApparentLong(t) {\n\tvar o = calcSunTrueLong(t);\n\tvar omega = 125.04 - 1934.136 * t;\n\tvar lambda = o - 0.00569 - 0.00478 * Math.sin(degToRad(omega));\n\treturn lambda;\t\t// in degrees\n}\n\nfunction calcMeanObliquityOfEcliptic(t) {\n\tvar seconds = 21.448 - t*(46.8150 + t*(0.00059 - t*(0.001813)));\n\tvar e0 = 23.0 + (26.0 + (seconds/60.0))/60.0;\n\treturn e0;\t\t// in degrees\n}\n\nfunction calcObliquityCorrection(t) {\n\tvar e0 = calcMeanObliquityOfEcliptic(t);\n\tvar omega = 125.04 - 1934.136 * t;\n\tvar e = e0 + 0.00256 * Math.cos(degToRad(omega));\n\treturn e;\t\t// in degrees\n}\n\nfunction calcSunRtAscension(t) {\n\tvar e = calcObliquityCorrection(t);\n\tvar lambda = calcSunApparentLong(t);\n\tvar tananum = (Math.cos(degToRad(e)) * Math.sin(degToRad(lambda)));\n\tvar tanadenom = (Math.cos(degToRad(lambda)));\n\tvar alpha = radToDeg(Math.atan2(tananum, tanadenom));\n\treturn alpha;\t\t// in degrees\n}\n\nfunction calcSunDeclination(t) {\n\tvar e = calcObliquityCorrection(t);\n\tvar lambda = calcSunApparentLong(t);\n\tvar sint = Math.sin(degToRad(e)) * Math.sin(degToRad(lambda));\n\tvar theta = radToDeg(Math.asin(sint));\n\treturn theta;\t\t// in degrees\n}\n\nfunction calcEquationOfTime(t) {\n\tvar epsilon = calcObliquityCorrection(t);\n\tvar l0 = calcGeomMeanLongSun(t);\n\tvar e = calcEccentricityEarthOrbit(t);\n\tvar m = calcGeomMeanAnomalySun(t);\n\n\tvar y = Math.tan(degToRad(epsilon)/2.0);\n\ty *= y;\n\n\tvar sin2l0 = Math.sin(2.0 * degToRad(l0));\n\tvar sinm   = Math.sin(degToRad(m));\n\tvar cos2l0 = Math.cos(2.0 * degToRad(l0));\n\tvar sin4l0 = Math.sin(4.0 * degToRad(l0));\n\tvar sin2m  = Math.sin(2.0 * degToRad(m));\n\n\tvar Etime = y * sin2l0 - 2.0 * e * sinm + 4.0 * e * y * sinm * cos2l0 - 0.5 * y * y * sin4l0 - 1.25 * e * e * sin2m;\n\treturn radToDeg(Etime)*4.0;\t// in minutes of time\n}\n\nfunction calcHourAngleSunrise(lat, solarDec) {\n\tvar latRad = degToRad(lat);\n\tvar sdRad  = degToRad(solarDec);\n\tvar HAarg = (Math.cos(degToRad(90.833))/(Math.cos(latRad)*Math.cos(sdRad))-Math.tan(latRad) * Math.tan(sdRad));\n\tvar HA = Math.acos(HAarg);\n\treturn HA;\t\t// in radians (for sunset, use -HA)\n}\n\nfunction getJD(year, month, day) {\n\tif (month <= 2) {\n\t\tyear -= 1\n\t\tmonth += 12\n\t}\n\tvar A = Math.floor(year/100)\n\tvar B = 2 - A + Math.floor(A/4)\n\tvar JD = Math.floor(365.25*(year + 4716)) + Math.floor(30.6001*(month+1)) + day + B - 1524.5\n\treturn JD\n}\n\nfunction calcRefraction(elev) {\n\tvar correction;\n\tif (elev > 85.0) {\n\t\tcorrection = 0.0;\n\t} else {\n\t\tvar te = Math.tan(degToRad(elev));\n\t\tif (elev > 5.0) {\n\t\t\tcorrection = 58.1 / te - 0.07 / (te*te*te) + 0.000086 / (te*te*te*te*te);\n\t\t} else if (elev > -0.575) {\n\t\t\tcorrection = 1735.0 + elev * (-518.2 + elev * (103.4 + elev * (-12.79 + elev * 0.711) ) );\n\t\t} else {\n\t\t\tcorrection = -20.774 / te;\n\t\t}\n\t\tcorrection = correction / 3600.0;\n\t}\n\n\treturn correction\n}\n\nfunction calcAzEl(T, localtime, latitude, longitude, zone) {\n\n\tvar eqTime = calcEquationOfTime(T)\n\tvar theta  = calcSunDeclination(T)\n\n\tvar solarTimeFix = eqTime + 4.0 * longitude - 60.0 * zone\n\tvar earthRadVec = calcSunRadVector(T)\n\tvar trueSolarTime = localtime + solarTimeFix\n\twhile (trueSolarTime > 1440) {\n\t\ttrueSolarTime -= 1440\n\t}\n\tvar hourAngle = trueSolarTime / 4.0 - 180.0;\n\tif (hourAngle < -180) {\n\t\thourAngle += 360.0\n\t}\n\tvar haRad = degToRad(hourAngle)\n\tvar csz = Math.sin(degToRad(latitude)) * Math.sin(degToRad(theta)) + Math.cos(degToRad(latitude)) * Math.cos(degToRad(theta)) * Math.cos(haRad)\n\tif (csz > 1.0) {\n\t\tcsz = 1.0\n\t} else if (csz < -1.0) { \n\t\tcsz = -1.0\n\t}\n\tvar zenith = radToDeg(Math.acos(csz))\n\tvar azDenom = ( Math.cos(degToRad(latitude)) * Math.sin(degToRad(zenith)) )\n\tvar azimuth\n\tif (Math.abs(azDenom) > 0.001) {\n\t\tvar azRad = (( Math.sin(degToRad(latitude)) * Math.cos(degToRad(zenith)) ) - Math.sin(degToRad(theta))) / azDenom\n\t\tif (Math.abs(azRad) > 1.0) {\n\t\t\tif (azRad < 0) {\n\t\t\t\tazRad = -1.0\n\t\t\t} else {\n\t\t\t\tazRad = 1.0\n\t\t\t}\n\t\t}\n\t\tazimuth = 180.0 - radToDeg(Math.acos(azRad))\n\t\tif (hourAngle > 0.0) {\n\t\t\tazimuth = -azimuth\n\t\t}\n\t} else {\n\t\tif (latitude > 0.0) {\n\t\t\tazimuth = 180.0\n\t\t} else { \n\t\t\tazimuth = 0.0\n\t\t}\n\t}\n\tif (azimuth < 0.0) {\n\t\tazimuth += 360.0\n\t}\n\tvar exoatmElevation = 90.0 - zenith\n\n\t// Atmospheric Refraction correction\n\tvar refractionCorrection = calcRefraction(exoatmElevation)\n\n\tvar solarZen = zenith - refractionCorrection;\n\tvar elevation = 90.0 - solarZen\n\n\treturn {\"azimuth\": azimuth, \"elevation\": elevation}\n}\n\nfunction calcSolNoon(jd, longitude, timezone) {\n\tvar tnoon = calcTimeJulianCent(jd - longitude/360.0)\n\tvar eqTime = calcEquationOfTime(tnoon)\n\tvar solNoonOffset = 720.0 - (longitude * 4) - eqTime // in minutes\n\tvar newt = calcTimeJulianCent(jd - 0.5 + solNoonOffset/1440.0)\n\teqTime = calcEquationOfTime(newt)\n\tvar solNoonLocal = 720 - (longitude * 4) - eqTime + (timezone*60.0)// in minutes\n\twhile (solNoonLocal < 0.0) {\n\t\tsolNoonLocal += 1440.0;\n\t}\n\twhile (solNoonLocal >= 1440.0) {\n\t\tsolNoonLocal -= 1440.0;\n\t}\n\n\treturn solNoonLocal\n}\n\n\n\nfunction calcSunriseSetUTC(rise, JD, latitude, longitude) {\n\tvar t = calcTimeJulianCent(JD);\n\tvar eqTime = calcEquationOfTime(t);\n\tvar solarDec = calcSunDeclination(t);\n\tvar hourAngle = calcHourAngleSunrise(latitude, solarDec);\n\tif (!rise) hourAngle = -hourAngle;\n\tvar delta = longitude + radToDeg(hourAngle);\n\tvar timeUTC = 720 - (4.0 * delta) - eqTime;\t// in minutes\n\n\treturn timeUTC\n}\n\n// rise = 1 for sunrise, 0 for sunset\nfunction calcSunriseSet(rise, JD, latitude, longitude, timezone) {\n\n\tvar timeUTC = calcSunriseSetUTC(rise, JD, latitude, longitude);\n\tvar newTimeUTC = calcSunriseSetUTC(rise, JD + timeUTC/1440.0, latitude, longitude); \n\tvar azimuth;\n\tvar timeLocal;\n\tif (!Number.isNaN(newTimeUTC)) {\n\t\ttimeLocal = newTimeUTC + (timezone * 60.0)\n\t\tvar riseT = calcTimeJulianCent(JD + newTimeUTC/1440.0)\n\t\tvar riseAzEl = calcAzEl(riseT, timeLocal, latitude, longitude, timezone)\n\t\tazimuth = riseAzEl.azimuth\n\t\tvar jday = JD\n\t\tif ( (timeLocal < 0.0) || (timeLocal >= 1440.0) ) {\n\t\t\tvar increment = ((timeLocal < 0) ? 1 : -1)\n\t\t\twhile ((timeLocal < 0.0)||(timeLocal >= 1440.0)) {\n\t\t\t\ttimeLocal += increment * 1440.0\n\t\t\t\tjday -= increment\n\t\t\t}\n\t\t}\n\n\t} else { // no sunrise/set found\n\n\t\tazimuth = -1.0\n\t\ttimeLocal = 0.0\n\t\tvar doy = calcDoyFromJD(JD)\n\t\tif ( ((latitude > 66.4) && (doy > 79) && (doy < 267)) ||\n\t\t\t\t ((latitude < -66.4) && ((doy < 83) || (doy > 263))) ) {\n\t\t\t//previous sunrise/next sunset\n\t\t\tjday = calcJDofNextPrevRiseSet(!rise, rise, JD, latitude, longitude, timezone)\n\t\t} else {   //previous sunset/next sunrise\n\t\t\tjday = calcJDofNextPrevRiseSet(rise, rise, JD, latitude, longitude, timezone)\n\t\t}\n\t}\n\n\treturn {\"jday\": jday, \"timelocal\": timeLocal, \"azimuth\": azimuth}\n}\n\nfunction calcJDofNextPrevRiseSet(next, rise, JD, latitude, longitude, tz) {\n\n\tvar julianday = JD;\n\tvar increment = ((next) ? 1.0 : -1.0);\n\tvar time = calcSunriseSetUTC(rise, julianday, latitude, longitude);\n\n\twhile(Number.isNaN(time)) {\n\t\tjulianday += increment;\n\t\ttime = calcSunriseSetUTC(rise, julianday, latitude, longitude);\n\t}\n\tvar timeLocal = time + tz * 60.0\n\twhile ((timeLocal < 0.0) || (timeLocal >= 1440.0)) {\n\t\tvar incr = ((timeLocal < 0) ? 1 : -1)\n\t\ttimeLocal += (incr * 1440.0)\n\t\tjulianday -= incr\n\t}\n\n\treturn julianday;\n}\n\n/*************************************************************/\n/* end calculation functions */\n/*************************************************************/\n\n// The following code diverges greatly from the original NOAA Solar Calculator as a result of incorporating the Temporal API.\n\n/**\n * Converts a sunrise/sunset event (given Julian date, local time, and azimuth) \n * to a `Temporal.ZonedDateTime` or `Temporal.PlainDate` depending on the azimuth value.\n * \n * @param {Object} params - The parameters for the function.\n * @param {number} params.jday - The Julian date of the event (must be within valid range).\n * @param {number} params.timelocal - The local time in minutes since midnight (0 - 1439).\n * @param {number} params.azimuth - The azimuth of the sun at the event, used to determine if the time is valid.\n * @param {string} timeZone - The time zone to associate with the resulting `Temporal.ZonedDateTime`.\n * \n * @returns {Temporal.ZonedDateTime | Temporal.PlainDate} - The calculated `Temporal.ZonedDateTime` \n *   for the sunrise/sunset event if azimuth is valid; otherwise, returns a `Temporal.PlainDate`.\n * \n * @throws {Error} If the Julian date is outside the valid range (900000 to 2817000).\n * @throws {Error} If the local time is outside the valid range (0 to 1439 minutes).\n */\nfunction sunriseSetToTemporal({jday: julianDate, timelocal: timeLocal, azimuth}, timeZone) {\n\t// Validate the Julian date range (should be between 900000 and 2817000).\n\tif (julianDate < 900000 || julianDate > 2817000)\n\t\tthrow new Error('Invalid Julian date calculation result');\n\n\t// Calculate the year, month, and day from the Julian date.\n\tconst {year, month, day} = calcDateFromJD(julianDate);\n\n\t// If the azimuth is less than 0, return the date (no time). This is for events like sunrise.\n\tif (azimuth < 0)\n\t\treturn new Temporal.PlainDate(year, month, day);\n\n\t// Validate the local time to ensure it's within valid range (0 to 1439 minutes).\n\tif (timeLocal < 0 || timeLocal >= 1440) // 24 * 60 = 1440\n\t\tthrow new Error('Invalid time calculation result');\n\n\t// Convert the local time from minutes to seconds.\n\tconst totalSeconds = timeLocal * 60;\n\t\n\t// Calculate the hour (integer part of (totalSeconds / (minutes in hour * seconds in minute))).\n\tconst hour = Math.floor(totalSeconds / 3600); // 60 * 60 = 3600\n\t\n\t// Calculate the remaining minutes (after removing full hours).\n\tconst minute = Math.floor((totalSeconds % 3600) / 60);\n\t\n\t// Calculate the remaining seconds (after removing full minutes).\n\tconst second = Math.floor(totalSeconds % 60);\n\t\n\t// Calculate the remaining milliseconds (fractional part of seconds)\n\t// The `Temporal.ZonedDateTime.from` will round the milliseconds to 999.\n\tconst millisecond = Math.round((totalSeconds % 1) * 1000);\n\n\t// Return the event as a `Temporal.ZonedDateTime` in the specified time zone.\n\treturn Temporal.ZonedDateTime.from({year, month, day, hour, minute, second, millisecond, timeZone});\n}\n\n/**\n * Calculates solar events (sunrise and sunset) based on latitude, longitude, and dateTime.\n * It returns an object containing the sunrise and sunset times (either as `Temporal.ZonedDateTime` or `Temporal.PlainDate`),\n * along with the azimuths of the sun at those times. If the azimuth is not available, it returns `null`.\n * \n * @param {Object} coords - The object containing the geographic coordinates.\n * @param {number} coords.latitude - The latitude of the location in decimal degrees (float).\n * @param {number} coords.longitude - The longitude of the location in decimal degrees (float).\n * @param {Temporal.ZonedDateTime} dateTime - The date and time in a specific time zone.\n * \n * @returns {{\n *   sunrise: Temporal.ZonedDateTime | Temporal.PlainDate, \n *   sunset: Temporal.ZonedDateTime | Temporal.PlainDate, \n *   sunriseAzimuth: number | null, \n *   sunsetAzimuth: number | null\n * }} An object containing:\n *   - `sunrise`: The sunrise time as either a `Temporal.ZonedDateTime` or `Temporal.PlainDate`.\n *   - `sunset`: The sunset time as either a `Temporal.ZonedDateTime` or `Temporal.PlainDate`.\n *   - `sunriseAzimuth`: The azimuth of the sun at sunrise (in degrees), or `null` if not available.\n *   - `sunsetAzimuth`: The azimuth of the sun at sunset (in degrees), or `null` if not available.\n * \n * @throws {Error} Throws an error if `timeZone` is not a string when provided.\n */\nexport function calculateSolarEvents({latitude, longitude}, dateTime) {\n\t// Calculate the Julian Date for the given dateTime\n\tconst {year, month, day} = dateTime;\n\tconst julianDate = getJD(year, month, day);\n\n  // Get the time zone\n\tconst timeZone = dateTime.timeZoneId;\n\n\t// Calculate the time zone offset in hours (from dateTime's nanoseconds offset)\n\tconst tzOffsetFloat = dateTime.offsetNanoseconds / 1e9 / 3600;\n\n  // Clamp the latitude value to the range [-89.9, 89.9] to avoid surprising results and long loops\n  const clampedLatitude = Math.max(-89.9, Math.min(latitude, 89.9));\n\n\t// Calculate sunrise/sunset events (1 indicates sunrise, 0 indicates sunset)\n\tconst sunrise = calcSunriseSet(1, julianDate, clampedLatitude, longitude, tzOffsetFloat);\n\tconst sunset  = calcSunriseSet(0, julianDate, clampedLatitude, longitude, tzOffsetFloat);\n\n\treturn {\n\t\t// Convert sunrise/sunset to Temporal.ZonedDateTime or PlainDate based on azimuth\n\t\tsunrise: sunriseSetToTemporal(sunrise, timeZone),\n\t\tsunset: sunriseSetToTemporal(sunset, timeZone),\n\n\t\t// If the azimuth is negative, return null (no valid azimuth data)\n\t\tsunriseAzimuth: sunrise.azimuth < 0 ? null : sunrise.azimuth,\n\t\tsunsetAzimuth: sunset.azimuth < 0 ? null : sunset.azimuth\n\t};\n}\n", "/*\n  Copyright 2024-2025 Hora Solis project contributors\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport { calculateSolarEvents } from \"./solarCalculator.mjs\";\n\n/**\n * Checks if a given event time signifies a polar phenomenon by comparing \n * its date with a specified target time.\n *\n * A polar phenomenon, such as polar night or polar day, occurs when the event \n * time represents a date that is different from the target date, or when \n * the event time is a plain date (which inherently indicates a polar phenomenon).\n *\n * @param {Temporal.ZonedDateTime | Temporal.PlainDate} eventTime - The time of the solar event to evaluate.\n * @param {Temporal.ZonedDateTime} targetTime - The reference time for date comparison.\n * \n * @returns {boolean} Returns true if the event time indicates a polar phenomenon; otherwise, returns false.\n */\nfunction checkIfPolarPhenomenon(eventTime, targetTime) {\n  // Check if eventTime is a PlainDate, which always indicates a polar phenomenon\n  if (eventTime instanceof Temporal.PlainDate)\n    return true;\n\n  // Convert the event and target times to PlainDate objects for comparison\n  const eventDate = eventTime.toPlainDate();\n  const targetDate = targetTime.toPlainDate();\n\n  // Return true if the event date is not equal to the target date\n  return !eventDate.equals(targetDate);\n}\n\n/**\n * Calculates solar event times and checks for polar phenomena based on the given position and time.\n *\n * @param {Object} position - The geographical position.\n * @param {number} position.latitude - The latitude of the location.\n * @param {number} position.longitude - The longitude of the location.\n * @param {Temporal.ZonedDateTime} now - The current time in ISO format as a Temporal ZonedDateTime.\n * \n * @returns {Object} An object containing solar event information or indicating a polar phenomenon.\n * @returns {boolean} [returns.isPolarPhenomenon] - Indicates if a polar phenomenon occurs.\n * @returns {Temporal.ZonedDateTime} [returns.sunrise] - The time of sunrise at the given position.\n * @returns {Temporal.ZonedDateTime} [returns.sunset] - The time of sunset at the given position.\n * @returns {Temporal.ZonedDateTime} [returns.nextSunrise] - The time of the next sunrise after the current time.\n */\nfunction getSolarEvents(position, now) {\n  // Calculate the sunrise and sunset times for the current time\n  const {sunrise, sunset} = calculateSolarEvents(position, now);\n\n  // Check if either sunrise or sunset indicates a polar phenomenon\n  if (checkIfPolarPhenomenon(sunrise, now) || checkIfPolarPhenomenon(sunset, now))\n    return {isPolarPhenomenon: true};\n\n  // Check if the current time is earlier than sunrise\n  if (Temporal.ZonedDateTime.compare(now, sunrise) === -1) { // now < sunrise\n    // If so, retrieve the solar events for the previous day\n    const yesterday = now.subtract({days: 1});\n    const {sunrise: prevSunrise, sunset: prevSunset} = calculateSolarEvents(position, yesterday);\n\n    // Check for polar phenomena on the previous day's sunrise or sunset\n    // This also ensures that the current time is not earlier than yesterday's sunrise.\n    if (checkIfPolarPhenomenon(prevSunrise, yesterday) || checkIfPolarPhenomenon(prevSunset, yesterday))\n      return {isPolarPhenomenon: true};\n\n    // Return the previous day's sunrise and sunset, along with the current day's sunrise\n    return {sunrise: prevSunrise, sunset: prevSunset, nextSunrise: sunrise};\n\n  } else { // Now is later than or equal to sunrise\n\n    // Calculate the solar events for the next day\n    const tomorrow = now.add({days: 1});\n    const {sunrise: nextSunrise} = calculateSolarEvents(position, tomorrow);\n\n    // Check if the next day's sunrise indicates a polar phenomenon\n    // This also ensures that the current time is not later than or equal to tomorrow's sunrise.\n    if (checkIfPolarPhenomenon(nextSunrise, tomorrow))\n      return {isPolarPhenomenon: true};\n\n    // Return the current day's sunrise, sunset, and the next day's sunrise\n    return {sunrise, sunset, nextSunrise};\n  }\n}\n\nfunction calculateTime(from, to, now) {\n  const intervalDuration = to.epochMilliseconds - from.epochMilliseconds; // Total milliseconds in the day/night\n  const elapsedTime = now.epochMilliseconds - from.epochMilliseconds; // Elapsed milliseconds since start of day/night\n\n  const secondDuration = intervalDuration / 43200; // 12 * 60 * 60 = 43200\n  const minuteDuration = 60 * secondDuration;\n  const hourDuration = 3600 * secondDuration; // 60 * 60 = 3600\n\n  // Calculate the hour\n  const hour = Math.floor(elapsedTime / hourDuration);\n  const fullHoursMilliseconds = hour * hourDuration;\n\n  // Calculate the remaining minutes (after removing full hours)\n  const minute = Math.floor((elapsedTime - fullHoursMilliseconds) / minuteDuration);\n\n  // Calculate the remaining seconds (after removing full minutes)\n  const second = Math.floor((elapsedTime - fullHoursMilliseconds - minute * minuteDuration) / secondDuration);\n\n  // Calculate the milliseconds remaining until the next second starts\n  const elapsedMilliseconds = fullHoursMilliseconds + minute * minuteDuration + second * secondDuration;\n  const durationUntilNextSecond = secondDuration - (now.epochMilliseconds - (from.epochMilliseconds + elapsedMilliseconds));\n\n  return { hour, minute, second, secondDuration, durationUntilNextSecond };\n}\n\nfunction calculateIntervalDuration(from, to) {\n  return to.epochMilliseconds - from.epochMilliseconds; // Total milliseconds in the day/night\n}\n\nexport function getNaturalDay(position, now) {\n  const {sunrise, sunset, nextSunrise, isPolarPhenomenon} = getSolarEvents(position, now);\n\n  if (isPolarPhenomenon)\n    return {isPolarPhenomenon};\n\n  const isDay = Temporal.ZonedDateTime.compare(now, sunset) === -1 // now < sunset\n\n  const {hour, minute, second, secondDuration, durationUntilNextSecond} = (isDay) ? calculateTime(sunrise, sunset, now) : calculateTime(sunset, nextSunrise, now);\n\n  const dayMilliseconds = calculateIntervalDuration(sunrise, sunset);\n  const nightMilliseconds = calculateIntervalDuration(sunset, nextSunrise);\n\n  // const daySecondDuration = dayMilliseconds / 43200; // 12 * 60 * 60 = 43200\n  // const nightSecondDuration = nightMilliseconds / 43200; // 12 * 60 * 60 = 43200\n\n  const calculateTimeWithin = (point) => {\n    if (Temporal.ZonedDateTime.compare(point, sunrise) === -1 || // point < sunrise\n        Temporal.ZonedDateTime.compare(point, nextSunrise) >= 0) { // point >= nextSunrise\n      throw new Error('Time point is outside of sunrise..nextSunrise range, excluding nextSunrise');\n    }\n\n    const isDay = Temporal.ZonedDateTime.compare(point, sunset) === -1 // point < sunset\n\n    const {hour, minute, second} = (isDay) ? calculateTime(sunrise, sunset, point) : calculateTime(sunset, nextSunrise, point);\n\n    return {\n      isDay,\n      hour,\n      minute,\n      second,\n      vigilia: (isDay) ? null : Math.floor(hour / 3)\n    };\n  }\n\n  const vigilia = (isDay) ? null : Math.floor(hour / 3);\n\n  return {\n    sunrise,\n    sunset,\n    nextSunrise,\n    isPolarPhenomenon,\n    isDay,\n    hour,\n    minute,\n    second,\n    secondDuration,\n    durationUntilNextSecond,\n    dayMilliseconds,\n    nightMilliseconds,\n    // daySecondDuration,\n    // nightSecondDuration,\n    vigilia,\n    calculateTimeWithin\n  };\n}\n", "/*\n  Copyright 2024-2025 Hora Solis project contributors\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\n/*\n```js\nIntl.supportedValuesOf('timeZone')\nJSON.stringify(Intl.supportedValuesOf('timeZone'));\n\nconst firefox = [];\nconst chrome = [];\n\nconst uniqueArray = ([...new Set([...firefox, ...chrome])]).sort();\nconsole.log(uniqueArray);\n```\n*/\n\nconst timeZoneLocations = {\n\n/*\nGiven a JavaScript array of timezone names, generate a JavaScript object mapping each timezone name to its geographic coordinates as follows:\n\n* If the timezone represents a city, town or settlement, determine the geographic coordinates of its center.\n* If the timezone represents a geographic region rather than a specific city, identify the largest population center (city, town, settlement or station) within the most populated area of that timezone and use the geographic coordinates of its center.\n* If no major population center exists, use the geographic center of the timezone instead.\n\nReturn the results as a JavaScript object literal where each key is a timezone name from the input array and each value is a two-element array containing the latitude and longitude coordinates.\nDo not include any comments.\nEach timezone should be listed on a separate line in the object.\nThe last element in the object should be followed by a comma.\n*/\n\n'Africa/Abidjan': [5.3167, -4.0333],\n'Africa/Accra': [5.6037, -0.1870],\n'Africa/Addis_Ababa': [8.9806, 38.7578],\n'Africa/Algiers': [36.7538, 3.0588],\n'Africa/Asmara': [15.3229, 38.9251],\n'Africa/Asmera': [15.3229, 38.9251],\n'Africa/Bamako': [12.6392, -8.0029],\n'Africa/Bangui': [4.3947, 18.5582],\n'Africa/Banjul': [13.4531, -16.5790],\n'Africa/Bissau': [11.8633, -15.5977],\n'Africa/Blantyre': [-15.7833, 35.0167],\n'Africa/Brazzaville': [-4.2634, 15.2429],\n'Africa/Bujumbura': [-3.3822, 29.3644],\n'Africa/Cairo': [30.0444, 31.2357],\n'Africa/Casablanca': [33.5731, -7.5898],\n'Africa/Ceuta': [35.888, -5.319],\n'Africa/Conakry': [9.6412, -13.5784],\n'Africa/Dakar': [14.6928, -17.4467],\n'Africa/Dar_es_Salaam': [-6.7924, 39.2083],\n'Africa/Djibouti': [11.8251, 42.5903],\n'Africa/Douala': [4.0511, 9.7679],\n'Africa/El_Aaiun': [27.15, -13.20],\n'Africa/Freetown': [8.4657, -13.2317],\n'Africa/Gaborone': [-24.6282, 25.9231],\n'Africa/Harare': [-17.8292, 31.0530],\n'Africa/Johannesburg': [-26.2041, 28.0473],\n'Africa/Juba': [4.8517, 31.5713],\n'Africa/Kampala': [0.3476, 32.5825],\n'Africa/Khartoum': [15.5007, 32.5599],\n'Africa/Kigali': [-1.9577, 30.1127],\n'Africa/Kinshasa': [-4.4419, 15.2663],\n'Africa/Lagos': [6.5244, 3.3792],\n'Africa/Libreville': [0.4162, 9.4673],\n'Africa/Lome': [6.1725, 1.2314],\n'Africa/Luanda': [-8.8390, 13.2894],\n'Africa/Lubumbashi': [-11.687, 27.4806],\n'Africa/Lusaka': [-15.3875, 28.3228],\n'Africa/Malabo': [3.75, 8.7833],\n'Africa/Maputo': [-25.9692, 32.5732],\n'Africa/Maseru': [-29.3153, 27.4869],\n'Africa/Mbabane': [-26.3054, 31.1367],\n'Africa/Mogadishu': [2.0371, 45.3438],\n'Africa/Monrovia': [6.3, -10.8],\n'Africa/Nairobi': [-1.2921, 36.8219],\n'Africa/Ndjamena': [12.1348, 15.0557],\n'Africa/Niamey': [13.5136, 2.112],\n'Africa/Nouakchott': [18.0858, -15.9785],\n'Africa/Ouagadougou': [12.3714, -1.5197],\n'Africa/Porto-Novo': [6.4969, 2.6289],\n'Africa/Sao_Tome': [0.3365, 6.7273],\n'Africa/Timbuktu': [16.7736, -3.0026],\n'Africa/Tripoli': [32.8872, 13.1913],\n'Africa/Tunis': [36.8065, 10.1815],\n'Africa/Windhoek': [-22.5609, 17.0658],\n\n'America/Adak': [51.88, -176.63],\n'America/Anchorage': [61.2181, -149.9003],\n'America/Anguilla': [18.2206, -63.0686],\n'America/Antigua': [17.117, -61.85],\n'America/Araguaina': [-7.21, -48.21],\n'America/Argentina/Buenos_Aires': [-34.6037, -58.3816],\n'America/Argentina/Catamarca': [-28.4683, -65.7808],\n'America/Argentina/ComodRivadavia': [-45.87, -67.50],\n'America/Argentina/Cordoba': [-31.4201, -64.1888],\n'America/Argentina/Jujuy': [-24.194, -65.297],\n'America/Argentina/La_Rioja': [-29.415, -66.862],\n'America/Argentina/Mendoza': [-32.8895, -68.8458],\n'America/Argentina/Rio_Gallegos': [-51.623, -69.217],\n'America/Argentina/Salta': [-24.7859, -65.4232],\n'America/Argentina/San_Juan': [-31.5375, -68.5368],\n'America/Argentina/San_Luis': [-33.300, -66.350],\n'America/Argentina/Tucuman': [-26.8083, -65.2176],\n'America/Argentina/Ushuaia': [-54.8019, -68.3030],\n'America/Aruba': [12.5167, -70.0333],\n'America/Asuncion': [-25.2637, -57.5759],\n'America/Atikokan': [48.75, -91.62],\n'America/Bahia': [-12.9777, -38.5016],\n'America/Bahia_Banderas': [20.6534, -105.2253],\n'America/Barbados': [13.096, -59.6167],\n'America/Belem': [-1.4558, -48.5024],\n'America/Belize': [17.5046, -88.1962],\n'America/Blanc-Sablon': [51.42, -57.08],\n'America/Boa_Vista': [2.8235, -60.6750],\n'America/Bogota': [4.711, -74.0721],\n'America/Boise': [43.615, -116.2023],\n'America/Buenos_Aires': [-34.6037, -58.3816],\n'America/Cambridge_Bay': [69.1167, -105.0333],\n'America/Campo_Grande': [-20.4697, -54.6204],\n'America/Cancun': [21.1619, -86.8515],\n'America/Caracas': [10.4806, -66.9036],\n'America/Catamarca': [-28.4683, -65.7808],\n'America/Cayenne': [4.9224, -52.3135],\n'America/Cayman': [19.3133, -81.2546],\n'America/Chicago': [41.8781, -87.6298],\n'America/Chihuahua': [28.6353, -106.0889],\n'America/Ciudad_Juarez': [31.6904, -106.4245],\n'America/Coral_Harbour': [63.75, -89.1333],\n'America/Cordoba': [-31.4201, -64.1888],\n'America/Costa_Rica': [9.9281, -84.0907],\n'America/Creston': [49.1167, -117.5167],\n'America/Cuiaba': [-15.6014, -56.0979],\n'America/Curacao': [12.1696, -68.99],\n'America/Danmarkshavn': [76.7667, -18.6667],\n'America/Dawson': [64.0611, -139.6699],\n'America/Dawson_Creek': [55.7617, -120.236],\n'America/Denver': [39.7392, -104.9903],\n'America/Detroit': [42.3314, -83.0458],\n'America/Dominica': [15.301, -61.3883],\n'America/Edmonton': [53.5461, -113.4938],\n'America/Eirunepe': [-6.6422, -69.8839],\n'America/El_Salvador': [13.6929, -89.2182],\n'America/Ensenada': [31.8667, -116.6167],\n'America/Fort_Nelson': [58.8056, -122.6],\n'America/Fortaleza': [-3.7172, -38.5434],\n'America/Glace_Bay': [46.1944, -59.9714],\n'America/Godthab': [64.1833, -51.7214],\n'America/Goose_Bay': [53.3194, -60.4614],\n'America/Grand_Turk': [21.4667, -71.1333],\n'America/Grenada': [12.0561, -61.7483],\n'America/Guadeloupe': [16.2417, -61.5333],\n'America/Guatemala': [14.6349, -90.5069],\n'America/Guayaquil': [-2.17, -79.92],\n'America/Guyana': [6.8013, -58.1551],\n'America/Halifax': [44.6488, -63.5752],\n'America/Havana': [23.1136, -82.3666],\n'America/Hermosillo': [29.072967, -110.9559],\n'America/Indiana/Indianapolis': [39.7684, -86.1581],\n'America/Indiana/Knox': [38.683, -87.533],\n'America/Indiana/Marengo': [38.75, -86.8],\n'America/Indiana/Petersburg': [38.2833, -87.1333],\n'America/Indiana/Tell_City': [37.95, -86.6833],\n'America/Indiana/Vevay': [38.75, -85.4],\n'America/Indiana/Vincennes': [38.6773, -87.5281],\n'America/Indiana/Winamac': [41.0667, -86.9167],\n'America/Indianapolis': [39.7684, -86.1581],\n'America/Inuvik': [68.3607, -133.7233],\n'America/Iqaluit': [63.7467, -68.5167],\n'America/Jamaica': [17.9714, -76.7936],\n'America/Jujuy': [24.1856, -65.2999],\n'America/Juneau': [58.3019, -134.4197],\n'America/Kentucky/Louisville': [38.2527, -85.7585],\n'America/Kentucky/Monticello': [36.8401, -83.305],\n'America/Kralendijk': [12.15, -68.27],\n'America/La_Paz': [-16.4897, -68.1193],\n'America/Lima': [-12.0464, -77.0428],\n'America/Los_Angeles': [34.0522, -118.2437],\n'America/Louisville': [38.2527, -85.7585],\n'America/Lower_Princes': [17.5, -62.9833],\n'America/Maceio': [-9.6658, -35.735],\n'America/Managua': [12.1364, -86.2514],\n'America/Manaus': [-3.119, -60.0217],\n'America/Marigot': [18.0667, -63.0833],\n'America/Martinique': [14.6167, -61],\n'America/Matamoros': [25.87, -97.5],\n'America/Mazatlan': [23.2494, -106.4111],\n'America/Mendoza': [-32.8895, -68.8458],\n'America/Menominee': [45.1077, -87.6346],\n'America/Merida': [20.9674, -89.5926],\n'America/Metlakatla': [55.22, -131.5311],\n'America/Mexico_City': [19.4326, -99.1332],\n'America/Miquelon': [47.0667, -56.3333],\n'America/Moncton': [46.0878, -64.7782],\n'America/Monterrey': [25.6866, -100.3161],\n'America/Montevideo': [-34.9011, -56.1645],\n'America/Montreal': [45.5017, -73.5673],\n'America/Montserrat': [16.7425, -62.1875],\n'America/Nassau': [25.0343, -77.3963],\n'America/New_York': [40.7128, -74.006],\n'America/Nipigon': [49.0167, -88.5833],\n'America/Nome': [64.5011, -165.4064],\n'America/Noronha': [-3.857, -32.431],\n'America/North_Dakota/Beulah': [47.2833, -101.8167],\n'America/North_Dakota/Center': [46.9333, -100.75],\n'America/North_Dakota/New_Salem': [46.85, -100.0],\n'America/Nuuk': [64.1833, -51.7214],\n'America/Ojinaga': [29.5833, -104.2833],\n'America/Panama': [8.9833, -79.5167],\n'America/Pangnirtung': [66.1333, -65.7167],\n'America/Paramaribo': [5.8667, -55.1667],\n'America/Phoenix': [33.4484, -112.074],\n'America/Port-au-Prince': [18.5392, -72.336],\n'America/Port_of_Spain': [10.6667, -61.5167],\n'America/Porto_Velho': [-8.7612, -63.9039],\n'America/Puerto_Rico': [18.4655, -66.1057],\n'America/Punta_Arenas': [-53.1638, -70.9171],\n'America/Rainy_River': [48.7667, -94.5],\n'America/Rankin_Inlet': [62.8167, -92.0833],\n'America/Recife': [-8.0476, -34.877],\n'America/Regina': [50.4452, -104.6189],\n'America/Resolute': [74.7167, -94.9667],\n'America/Rio_Branco': [-9.975, -67.824],\n'America/Rosario': [-32.9468, -60.6393],\n'America/Santarem': [-2.4381, -54.6996],\n'America/Santiago': [-33.4489, -70.6693],\n'America/Santo_Domingo': [18.4861, -69.9312],\n'America/Sao_Paulo': [-23.5505, -46.6333],\n'America/Scoresbysund': [70.4833, -21.9667],\n'America/Sitka': [57.0531, -135.33],\n'America/St_Barthelemy': [17.9, -62.8333],\n'America/St_Johns': [47.5615, -52.7126],\n'America/St_Kitts': [17.3, -62.717],\n'America/St_Lucia': [14.0101, -61.009],\n'America/St_Thomas': [18.3358, -64.8963],\n'America/St_Vincent': [13.1567, -61.2248],\n'America/Swift_Current': [50.2833, -107.8],\n'America/Tegucigalpa': [14.0723, -87.1921],\n'America/Thule': [76.5311, -68.7031],\n'America/Thunder_Bay': [48.3809, -89.2477],\n'America/Tijuana': [32.5149, -117.0382],\n'America/Toronto': [43.65107, -79.347015],\n'America/Tortola': [18.4167, -64.6167],\n'America/Vancouver': [49.2827, -123.1207],\n'America/Whitehorse': [60.7167, -135.05],\n'America/Winnipeg': [49.8951, -97.1384],\n'America/Yakutat': [59.5461, -139.7278],\n'America/Yellowknife': [62.454, -114.3718],\n\n'Asia/Aden': [12.785, 45.0186],\n'Asia/Almaty': [43.238949, 76.889709],\n'Asia/Amman': [31.9539, 35.9106],\n'Asia/Anadyr': [64.7333, 177.5167],\n'Asia/Aqtau': [44.843, 50.9761],\n'Asia/Aqtobe': [50.2833, 57.1667],\n'Asia/Ashgabat': [37.9601, 58.3261],\n'Asia/Atyrau': [47.1167, 51.9333],\n'Asia/Baghdad': [33.3128, 44.3615],\n'Asia/Bahrain': [26.0667, 50.5577],\n'Asia/Baku': [40.4093, 49.8671],\n'Asia/Bangkok': [13.7563, 100.5018],\n'Asia/Barnaul': [53.3479, 83.7784],\n'Asia/Beirut': [33.8938, 35.5018],\n'Asia/Bishkek': [42.8746, 74.6122],\n'Asia/Brunei': [4.9031, 114.9398],\n'Asia/Calcutta': [22.5726, 88.3639],\n'Asia/Chita': [52.0333, 113.4667],\n'Asia/Choibalsan': [48.0667, 114.5],\n'Asia/Chongqing': [29.563, 106.5516],\n'Asia/Colombo': [6.9271, 79.8612],\n'Asia/Damascus': [33.5138, 36.2765],\n'Asia/Dhaka': [23.8103, 90.4125],\n'Asia/Dili': [-8.5569, 125.5603],\n'Asia/Dubai': [25.2048, 55.2708],\n'Asia/Dushanbe': [38.5598, 68.787],\n'Asia/Famagusta': [35.1264, 33.4299],\n'Asia/Gaza': [31.5018, 34.4669],\n'Asia/Harbin': [45.8038, 126.5349],\n'Asia/Hebron': [31.532, 35.0998],\n'Asia/Ho_Chi_Minh': [10.8231, 106.6297],\n'Asia/Hong_Kong': [22.3193, 114.1694],\n'Asia/Hovd': [48.006, 91.667],\n'Asia/Irkutsk': [52.2833, 104.2833],\n'Asia/Jakarta': [-6.2088, 106.8456],\n'Asia/Jayapura': [-2.5333, 140.7167],\n'Asia/Jerusalem': [31.7683, 35.2137],\n'Asia/Kabul': [34.5553, 69.2075],\n'Asia/Kamchatka': [53.0167, 158.65],\n'Asia/Karachi': [24.8607, 67.0011],\n'Asia/Kashgar': [39.4704, 75.9898],\n'Asia/Kathmandu': [27.7172, 85.324],\n'Asia/Katmandu': [27.7172, 85.324],\n'Asia/Khandyga': [62.0, 135.0],\n'Asia/Kolkata': [22.5726, 88.3639],\n'Asia/Krasnoyarsk': [56.0153, 92.8932],\n'Asia/Kuala_Lumpur': [3.139, 101.6869],\n'Asia/Kuching': [1.5491, 110.3639],\n'Asia/Kuwait': [29.3759, 47.9774],\n'Asia/Macau': [22.1987, 113.5439],\n'Asia/Magadan': [59.5613, 150.8081],\n'Asia/Makassar': [-5.1477, 119.4327],\n'Asia/Manila': [14.5995, 120.9842],\n'Asia/Muscat': [23.5859, 58.4059],\n'Asia/Nicosia': [35.1856, 33.3823],\n'Asia/Novokuznetsk': [53.75, 87.1167],\n'Asia/Novosibirsk': [55.0084, 82.9357],\n'Asia/Omsk': [54.9885, 73.3242],\n'Asia/Oral': [51.2172, 51.375],\n'Asia/Phnom_Penh': [11.5564, 104.9282],\n'Asia/Pontianak': [-0.03, 109.3333],\n'Asia/Pyongyang': [39.0194, 125.7548],\n'Asia/Qatar': [25.2854, 51.441],\n'Asia/Qostanay': [53.2, 63.6167],\n'Asia/Qyzylorda': [44.8486, 65.5],\n'Asia/Rangoon': [16.8661, 96.1951],\n'Asia/Riyadh': [24.7136, 46.6753],\n'Asia/Saigon': [10.8231, 106.6297],\n'Asia/Sakhalin': [50.75, 142.8333],\n'Asia/Samarkand': [39.6542, 66.9597],\n'Asia/Seoul': [37.5665, 126.978],\n'Asia/Shanghai': [31.2304, 121.4737],\n'Asia/Singapore': [1.3521, 103.8198],\n'Asia/Srednekolymsk': [66.5333, 152.1333],\n'Asia/Taipei': [25.033, 121.5654],\n'Asia/Tashkent': [41.2995, 69.2401],\n'Asia/Tbilisi': [41.7151, 44.8271],\n'Asia/Tehran': [35.6892, 51.389],\n'Asia/Tel_Aviv': [32.0853, 34.7818],\n'Asia/Thimphu': [27.4728, 89.639],\n'Asia/Tokyo': [35.6895, 139.6917],\n'Asia/Tomsk': [56.4977, 84.9744],\n'Asia/Ulaanbaatar': [47.8864, 106.9057],\n'Asia/Urumqi': [43.8256, 87.6168],\n'Asia/Ust-Nera': [64.6667, 143.2],\n'Asia/Vientiane': [17.9757, 102.6331],\n'Asia/Vladivostok': [43.1155, 131.8855],\n'Asia/Yakutsk': [62.0355, 129.6755],\n'Asia/Yangon': [16.8409, 96.1735],\n'Asia/Yekaterinburg': [56.8389, 60.6057],\n'Asia/Yerevan': [40.1792, 44.4991],\n\n'Atlantic/Azores': [37.74, -25.67],\n'Atlantic/Bermuda': [32.293, -64.781],\n'Atlantic/Canary': [28.123, -15.436],\n'Atlantic/Cape_Verde': [14.933, -23.5133],\n'Atlantic/Faeroe': [62.0079, -6.787],\n'Atlantic/Faroe': [62.0079, -6.787],\n'Atlantic/Jan_Mayen': [70.9333, -8.6833],\n'Atlantic/Madeira': [32.6669, -16.9093],\n'Atlantic/Reykjavik': [64.1466, -21.9426],\n'Atlantic/South_Georgia': [-54.2833, -36.55],\n'Atlantic/St_Helena': [-15.965, -5.708],\n'Atlantic/Stanley': [-51.6985, -57.8512],\n\n'Australia/Adelaide': [-34.9285, 138.6007],\n'Australia/Brisbane': [-27.4698, 153.0251],\n'Australia/Broken_Hill': [-31.9533, 141.456],\n'Australia/Currie': [-39.8333, 143.9667],\n'Australia/Darwin': [-12.4634, 130.8456],\n'Australia/Eucla': [-31.7, 128.87],\n'Australia/Hobart': [-42.8821, 147.3272],\n'Australia/Lindeman': [-20.267, 148.716],\n'Australia/Lord_Howe': [-31.532, 159.078],\n'Australia/Melbourne': [-37.8136, 144.9631],\n'Australia/Perth': [-31.9505, 115.8605],\n'Australia/Sydney': [-33.8688, 151.2093],\n\n'Europe/Amsterdam': [52.3676, 4.9041],\n'Europe/Andorra': [42.5063, 1.5218],\n'Europe/Astrakhan': [46.3499, 48.0333],\n'Europe/Athens': [37.9838, 23.7275],\n'Europe/Belfast': [54.5973, -5.9301],\n'Europe/Belgrade': [44.7866, 20.4489],\n'Europe/Berlin': [52.5200, 13.4050],\n'Europe/Bratislava': [48.1486, 17.1077],\n'Europe/Brussels': [50.8503, 4.3517],\n'Europe/Bucharest': [44.4268, 26.1025],\n'Europe/Budapest': [47.4979, 19.0402],\n'Europe/Busingen': [47.67, 8.62],\n'Europe/Chisinau': [47.0105, 28.8638],\n'Europe/Copenhagen': [55.6761, 12.5683],\n'Europe/Dublin': [53.3498, -6.2603],\n'Europe/Gibraltar': [36.1408, -5.3536],\n'Europe/Guernsey': [49.45, -2.5333],\n'Europe/Helsinki': [60.1699, 24.9384],\n'Europe/Isle_of_Man': [54.15, -4.48],\n'Europe/Istanbul': [41.0082, 28.9784],\n'Europe/Jersey': [49.1875, -2.1039],\n'Europe/Kaliningrad': [54.7104, 20.4522],\n'Europe/Kiev': [50.4501, 30.5234],\n'Europe/Kirov': [58.6036, 49.6686],\n'Europe/Kyiv': [50.4501, 30.5234],\n'Europe/Lisbon': [38.7223, -9.1393],\n'Europe/Ljubljana': [46.0569, 14.5058],\n'Europe/London': [51.5074, -0.1278],\n'Europe/Luxembourg': [49.6116, 6.1319],\n'Europe/Madrid': [40.4168, -3.7038],\n'Europe/Malta': [35.8997, 14.5147],\n'Europe/Mariehamn': [60.0979, 19.9346],\n'Europe/Minsk': [53.9, 27.5667],\n'Europe/Monaco': [43.7384, 7.4246],\n'Europe/Moscow': [55.7558, 37.6173],\n'Europe/Oslo': [59.9139, 10.7522],\n'Europe/Paris': [48.8566, 2.3522],\n'Europe/Podgorica': [42.441, 19.2636],\n'Europe/Prague': [50.0755, 14.4378],\n'Europe/Riga': [56.9496, 24.1052],\n'Europe/Rome': [41.9028, 12.4964],\n'Europe/Samara': [53.1959, 50.1008],\n'Europe/San_Marino': [43.9424, 12.4578],\n'Europe/Sarajevo': [43.8563, 18.4131],\n'Europe/Saratov': [51.5333, 46.0333],\n'Europe/Simferopol': [44.9521, 34.1024],\n'Europe/Skopje': [41.9981, 21.4254],\n'Europe/Sofia': [42.6977, 23.3219],\n'Europe/Stockholm': [59.3293, 18.0686],\n'Europe/Tallinn': [59.437, 24.7536],\n'Europe/Tirane': [41.3275, 19.8187],\n'Europe/Tiraspol': [46.8378, 29.647],\n'Europe/Ulyanovsk': [54.3167, 48.4],\n'Europe/Uzhgorod': [48.6208, 22.2879],\n'Europe/Vaduz': [47.141, 9.5215],\n'Europe/Vatican': [41.9029, 12.4534],\n'Europe/Vienna': [48.2082, 16.3738],\n'Europe/Vilnius': [54.6872, 25.2797],\n'Europe/Volgograd': [48.708, 44.5133],\n'Europe/Warsaw': [52.2297, 21.0122],\n'Europe/Zagreb': [45.815, 15.9819],\n'Europe/Zaporozhye': [47.8388, 35.1396],\n'Europe/Zurich': [47.3769, 8.5417],\n\n'Indian/Antananarivo': [-18.8792, 47.5079],\n'Indian/Chagos': [-7.3, 72.4],\n'Indian/Christmas': [-10.45, 105.69],\n'Indian/Cocos': [-12.1167, 96.8833],\n'Indian/Comoro': [-11.7, 43.2333],\n'Indian/Kerguelen': [-49.35, 70.18],\n'Indian/Mahe': [-4.6167, 55.45],\n'Indian/Maldives': [4.1753, 73.5093],\n'Indian/Mauritius': [20.1667, 57.5],\n'Indian/Mayotte': [-12.7825, 45.2272],\n'Indian/Reunion': [-20.8821, 55.45],\n\n'Pacific/Apia': [-13.8333, -171.7500],\n'Pacific/Auckland': [-36.8485, 174.7633],\n'Pacific/Bougainville': [-4.2500, 154.0167],\n'Pacific/Chatham': [-43.95, -176.55],\n'Pacific/Chuuk': [7.5, 151.8],\n'Pacific/Easter': [-27.1127, -109.3497],\n'Pacific/Efate': [-17.7333, 168.3167],\n'Pacific/Enderbury': [-3.2667, -171.9167],\n'Pacific/Fakaofo': [-9.2333, -171.7667],\n'Pacific/Fiji': [-18.1248, 178.4501],\n'Pacific/Funafuti': [-8.5167, 179.2167],\n'Pacific/Galapagos': [-0.6667, -90.3333],\n'Pacific/Gambier': [-23.0333, -134.9833],\n'Pacific/Guadalcanal': [-9.4333, 159.95],\n'Pacific/Guam': [13.4667, 144.7333],\n'Pacific/Honolulu': [21.3069, -157.8583],\n'Pacific/Johnston': [16.7286, -169.5333],\n'Pacific/Kanton': [-2.767, -171.883],\n'Pacific/Kiritimati': [1.8721, -157.4278],\n'Pacific/Kosrae': [5.3167, 162.9833],\n'Pacific/Kwajalein': [8.7167, 167.7333],\n'Pacific/Majuro': [7.1167, 171.3833],\n'Pacific/Marquesas': [8.780, -139.280],\n'Pacific/Midway': [28.2000, -177.3500],\n'Pacific/Nauru': [-0.5333, 166.9167],\n'Pacific/Niue': [-19.0544, -169.8670],\n'Pacific/Norfolk': [-29.04, 167.96],\n'Pacific/Noumea': [-22.2558, 166.4505],\n'Pacific/Pago_Pago': [-14.2756, -170.7020],\n'Pacific/Palau': [7.3333, 134.4833],\n'Pacific/Pitcairn': [-25.0667, -130.1000],\n'Pacific/Pohnpei': [6.9667, 158.2167],\n'Pacific/Ponape': [6.9667, 158.2167],\n'Pacific/Port_Moresby': [-9.4438, 147.1841],\n'Pacific/Rarotonga': [-21.2000, -159.7667],\n'Pacific/Saipan': [15.1778, 145.7500],\n'Pacific/Tahiti': [-17.5333, -149.5667],\n'Pacific/Tarawa': [1.3292, 173.0000],\n'Pacific/Tongatapu': [-21.1394, -175.2018],\n'Pacific/Truk': [7.5, 151.8],\n'Pacific/Wake': [19.2833, 166.6000],\n'Pacific/Wallis': [-13.2850, -176.1825],\n\n/*\nGiven a JavaScript array of timezone names, generate a JavaScript object mapping each timezone name to its geographic coordinates as follows:\n\n* If the timezone represents a city, town or settlement, determine the geographic coordinates of its center.\n* If the timezone represents a geographic region rather than a specific city, identify the largest population center (city, town, settlement or station) within the most populated area of that timezone and use the geographic coordinates of its center.\n* If no major population center exists, use the geographic center of the timezone instead.\n\nReturn the results as a JavaScript object literal where each key is a timezone name from the input array and each value is a two-element array containing the latitude and longitude coordinates.\nInclude a comment for each entry indicating the name of the location used and its country.\nEach timezone should be listed on a separate line in the object.\nThe last element in the object should be followed by a comma.\n*/\n\n'Antarctica/Casey': [-66.283, 110.517], // Casey Station, Australia\n'Antarctica/Davis': [-68.5769, 77.9675], // Davis Station, Australia\n'Antarctica/DumontDUrville': [-66.667, 140.017], // Dumont d'Urville Station, France\n'Antarctica/Macquarie': [-54.5, 158.95], // Macquarie Island, Australia\n'Antarctica/Mawson': [-67.600, 62.867], // Mawson Station, Australia\n'Antarctica/McMurdo': [-77.8419, 166.6863], // McMurdo Station, USA\n'Antarctica/Palmer': [-64.772, -64.053], // Palmer Station, USA\n'Antarctica/Rothera': [-67.568, -68.122], // Rothera Research Station, United Kingdom\n'Antarctica/Syowa': [-69.000, 39.5833], // Syowa Station, Japan\n'Antarctica/Troll': [-72.017, 2.533], // Troll Station, Norway\n'Antarctica/Vostok': [-78.450, 106.867], // Vostok Station, Russia\n'Arctic/Longyearbyen': [78.2232, 15.6469], // Longyearbyen, Norway\n\n'CET': [48.8566, 2.3522], // Paris, France\n'CST6CDT': [41.8781, -87.6298], // Chicago, USA\n'EET': [30.0444, 31.2357], // Cairo, Egypt\n'EST': [40.7128, -74.0060], // New York City, USA\n'EST5EDT': [40.7128, -74.0060], // New York City, USA\n'Factory': [51.4779, -0.0015], // Royal Observatory, Greenwich\n'HST': [21.3069, -157.8583], // Honolulu, USA\n'MET': [52.5200, 13.4050], // Berlin, Germany\n'MST': [33.4484, -112.0740], // Phoenix, USA\n'MST7MDT': [39.7392, -104.9903], // Denver, USA\n'PST8PDT': [34.0522, -118.2437], // Los Angeles, USA\n'UTC': [51.5074, -0.1278], // London, United Kingdom\n'WET': [38.7223, -9.1393], // Lisbon, Portugal\n\n'Etc/GMT-1': [6.5244, 3.3792], // Lagos, Nigeria\n'Etc/GMT-2': [30.0444, 31.2357], // Cairo, Egypt\n'Etc/GMT-3': [55.7558, 37.6173], // Moscow, Russia\n'Etc/GMT-4': [25.2048, 55.2708], // Dubai, United Arab Emirates\n'Etc/GMT-5': [24.8607, 67.0011], // Karachi, Pakistan\n'Etc/GMT-6': [23.8103, 90.4125], // Dhaka, Bangladesh\n'Etc/GMT-7': [-6.2088, 106.8456], // Jakarta, Indonesia\n'Etc/GMT-8': [39.9042, 116.4074], // Beijing, China\n'Etc/GMT-9': [35.6895, 139.6917], // Tokyo, Japan\n'Etc/GMT-10': [-33.8688, 151.2093], // Sydney, Australia\n'Etc/GMT-11': [-9.4456, 160.1562], // Honiara, Solomon Islands\n'Etc/GMT-12': [-36.8485, 174.7633], // Auckland, New Zealand\n'Etc/GMT-13': [-13.8333, -171.7500], // Apia, Samoa\n'Etc/GMT-14': [1.8721, -157.4278], // Kiritimati, Kiribati\n\n'Etc/GMT+1': [14.9330, -23.5133], // Praia, Cape Verde\n'Etc/GMT+2': [-3.857, -32.431], // Fernando de Noronha, Brazil\n'Etc/GMT+3': [-23.5505, -46.6333], // Sao Paulo, Brazil\n'Etc/GMT+4': [10.4806, -66.9036], // Caracas, Venezuela\n'Etc/GMT+5': [40.7128, -74.0060], // New York, USA\n'Etc/GMT+6': [19.4326, -99.1332], // Mexico City, Mexico\n'Etc/GMT+7': [33.4484, -112.0740], // Phoenix, USA\n'Etc/GMT+8': [34.0522, -118.2437], // Los Angeles, USA\n'Etc/GMT+9': [61.2181, -149.9003], // Anchorage, USA\n'Etc/GMT+10': [21.3069, -157.8583], // Honolulu, USA\n'Etc/GMT+11': [-14.2756, -170.7020], // Pago Pago, American Samoa\n'Etc/GMT+12': [0.193, -176.476], // Baker Island, USA\n};\n\nexport function getCurrentTimezonePosition() {\n  const location = timeZoneLocations[Intl.DateTimeFormat().resolvedOptions().timeZone];\n  if (location) {\n    return {\n      latitude: location[0],\n      longitude: location[1],\n      isTimeZoneDerivedPosition: true \n    };\n  }\n  return null;\n}\n", "/*\n  Copyright 2024-2025 Hora Solis project contributors\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport { getCurrentTimezonePosition } from \"./timezonePosition.mjs\";\n\n/**\n * Retrieves the user's geolocation, either from `localStorage` or by requesting it from the browser.\n * If geolocation data is found in `localStorage` and is recent enough, it returns the stored location.\n * Otherwise, it attempts to retrieve the user's current geolocation using the browser's geolocation API.\n * The location is then stored in `localStorage` for future use.\n * \n * This function returns a promise that resolves with an object containing:\n * - `latitude`: The latitude of the user's location.\n * - `longitude`: The longitude of the user's location.\n * - `timestamp`: The timestamp of when the geolocation data was recorded.\n * \n * If geolocation is not available, or if there is an error retrieving the location, the promise is rejected.\n * In such cases, it will attempt to return the most recent valid geolocation data from `localStorage` if available.\n *\n * @returns {Promise<{latitude: number, longitude: number, timestamp: number}>} A promise that resolves with an object containing the user's latitude, longitude, and timestamp of the location data.\n * \n * @throws {Error} If geolocation is not available and there is no stored location in `localStorage`.\n */\nexport function locateUser() {\n  // Get the stringified object from localStorage\n  const storedLocationRaw = localStorage.getItem('user-location');\n\n  // Convert the string back into an object, or null if not available\n  const storedLocation = storedLocationRaw ? JSON.parse(storedLocationRaw) : null;\n\n  // Check if there is data stored in localStorage and if it is recent enough\n  if (storedLocation) {\n    // Set maximumAge to avoid hitting API rate limits, longer for desktop, shorter for mobile\n    // TODO: Further investigate the appropriate maximum age to avoid hitting API rate limits\n    const maximumAge = ((navigator.userAgentData && navigator.userAgentData.mobile) ? 1 : 24) * (60 * 60 * 1000);\n\n    // Check if the stored location is within the maximum acceptable age (e.g., 1 hour for mobile, 1 day for desktop)\n    if (storedLocation.timestamp >= (Date.now() - maximumAge)) {\n      // Return stored location if it is valid (not too old)\n      return Promise.resolve(storedLocation);\n    }\n  }\n\n  // Check if geolocation API is supported by the browser\n  if (!navigator.geolocation) {\n    console.log('Geolocation is not available');\n\n    // If geolocation is not available, return stored location if available, otherwise reject the promise\n    if (storedLocation) {\n      return Promise.resolve(storedLocation);\n    }\n\n    const timezonePosition = getCurrentTimezonePosition();\n\n    if (timezonePosition) {\n      return Promise.resolve(timezonePosition);\n    }\n\n    return Promise.reject(new Error('Geolocation is not available and no stored location data.'));\n  }\n\n  // Use the geolocation API to get the user's current location\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        // Construct a simplified position object containing only the necessary data\n        const { timestamp, coords: { latitude, longitude } } = position;\n        const simplifiedPosition = { timestamp, latitude, longitude };\n\n        // Save the simplified position object to localStorage for future use\n        localStorage.setItem('user-location', JSON.stringify(simplifiedPosition));\n\n        // Resolve the promise with the simplified position data\n        resolve(simplifiedPosition);\n      },\n      (error) => {\n        console.log(`Unable to perform geolocation: ${error.message} (${error.code})`);\n\n        // If there was an error getting the geolocation, attempt to return the stored location if available\n        if (storedLocation) {\n          resolve(storedLocation);\n          return;\n        }\n\n        const timezonePosition = getCurrentTimezonePosition();\n        if (timezonePosition) {\n          resolve(timezonePosition);\n          return;\n        }\n\n        reject(new Error('Failed to retrieve geolocation and no stored location data.'));\n      },\n      {\n        // Specify options for the geolocation request (e.g., caching behavior)\n        // Chromium 130 has no location cache\n        // Firefox 132 has a cache that stores geodata for at least 12 hours, maybe longer\n        maximumAge: 15 * 60 * 1000 // Maximum age of cached location data (15 minutes)\n      }\n    );\n  });\n}\n", "/*\n  Copyright 2024-2025 Hora Solis project contributors\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\n// Dies naturalis \uD83C\uDF16\n// Hora prima..duodecima diei\n// Prima..quarta vigilia noctis\n// pars minuta prima\n// pars minuta secunda\n\nexport const numbersLatin = [\"\u2160\", \"\u2161\", \"\u2162\", \"\u2163\", \"\u2164\", \"\u2165\", \"\u2166\", \"\u2167\", \"\u2168\", \"\u2169\", \"\u216A\", \"\u216B\"];\nexport const numbersText = [\"Prima\", \"Secunda\", \"Tertia\", \"Quarta\", \"Quinta\", \"Sexta\", \"Septima\", \"Octava\", \"Nona\", \"Decima\", \"Undecima\", \"Duodecima\"];\n", "/*\n  Copyright 2024-2025 Hora Solis project contributors\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport {numbersLatin} from './locale.mjs';\n\nexport function getHoursMinutesText(milliseconds) {\n  // Convert milliseconds to seconds\n  const seconds = milliseconds / 1000;\n\n  // Calculate hours\n  const hours = Math.floor(seconds / 3600);\n\n  // Calculate remaining seconds after extracting hours\n  const minutes = Math.floor((seconds % 3600) / 60);\n    \n  // Return formatted as \"h:m\"\n  return `${hours}h ${minutes}m`;\n}\n\nexport function getTimeText(i, hour, minute, second, isCurrentInterval) {\n  const hourNumber = numbersLatin[i];\n\n  if (isCurrentInterval && i === hour)\n    return `${hourNumber} : ${minute.toString().padStart(2, '0')} : ${second.toString().padStart(2, '0')}`\n\n  return hourNumber;\n}\n\nexport function getClockSpeedText(romanSecond) {\n  const modernSecond = 1000; // ms\n  const speedScale = ((romanSecond - modernSecond) / modernSecond) * 100;\n\n  if (speedScale > 0) {\n    // slower than a modern second\n    return `Cursus horologii \uD83D\uDC0C&nbsp;${Math.round(speedScale)} centesimis tardius`;\n  } else {\n    // faster than a modern second\n    return `Cursus horologii \uD83D\uDC07&nbsp;${Math.round(Math.abs(speedScale))} centesimis celerius`;\n  }\n}\n\nexport function getClockSpeedFractionsText(romanSecond) {\n  const modernSecond = 1000; // ms\n  const speedScale = ((romanSecond - modernSecond) / modernSecond);\n\n  const closestFraction = findClosestFraction(Math.abs(speedScale));\n\n  if (speedScale > 0) {\n    // slower than a modern second\n    return `Cursus horologii \uD83D\uDC0C&nbsp;${fractionNames.get(closestFraction)} (${closestFraction}) tardius`;\n  } else {\n    // faster than a modern second\n    return `Cursus horologii \uD83D\uDC07&nbsp;${fractionNames.get(closestFraction)} (${closestFraction}) celerius`;\n  }\n}\n\nconst fractionNames = new Map([\n  [\"1/24\", \"Semuncia\"],\n  [\"1/16\", \"Sextula\"],\n  [\"1/12\", \"Uncia\"],\n  [\"1/8\", \"Octava\"],\n  [\"1/6\", \"Sextante\"],\n  [\"1/4\", \"Quadrante\"],\n  [\"1/3\", \"Triente\"],\n  [\"5/12\", \"Quincunce\"],\n  [\"1/2\", \"Semisse\"],\n  [\"7/12\", \"Septunce\"],\n  [\"2/3\", \"Bisse\"],\n  [\"3/4\", \"Dodrante\"],\n  [\"5/6\", \"Dextante\"],\n  [\"11/12\", \"Deunce\"],\n]);\n\n// Initialize the fractions map\nconst fractionDecimalValues = new Map(\n  Array.from(fractionNames.keys()).map((i) => {\n    const [a, b] = i.split('/');\n    return [a / b, i];\n  })\n);\n\n// Function to find the closest key and return its value\nfunction findClosestFraction(n) {\n  let closestKey = null;\n  let smallestDifference = Infinity;\n\n  // Iterate over the Map's keys\n  for (const key of fractionDecimalValues.keys()) {\n    const difference = Math.abs(key - n); // Calculate the absolute difference\n    if (difference < smallestDifference) {\n      smallestDifference = difference; // Update smallest difference\n      closestKey = key; // Update closest key\n    }\n  }\n\n  // Return the value associated with the closest key\n  return fractionDecimalValues.get(closestKey);\n}\n\nexport function calculateDayHourProgress(line, hour, minute, second) {\n  // If line has already passed\n  if (line <  hour)\n    return 100;\n\n  // If line is current\n  if (line === hour) {\n    const elapsedSeconds = minute * 60 + second;\n    const totalSeconds = 3600; // Total seconds in 1 hour\n\n    const progress = (elapsedSeconds / totalSeconds) * 100;\n    return Math.min(100, Math.max(0, progress)).toFixed(3); // Clamp to valid range\n  }\n  \n  // If line hasn't started\n  return 0;\n}\n\nexport function calculateNightVigiliaProgress(vigiliaLine, vigilia, hour, minute, second) {\n  // If vigiliaLine has already passed\n  if (vigiliaLine < vigilia) return 100;\n\n  // If vigiliaLine is current\n  if (vigiliaLine === vigilia) {\n    // Check for invalid input scenario\n    if (hour < vigilia * 3)\n      throw new Error('The hour is earlier than the vigilia start');\n\n    const elapsedSeconds = (hour - vigilia * 3) * 3600 + minute * 60 + second;\n    const totalSeconds = 3600 * 3; // Total seconds in 3 hours\n    const progress = (elapsedSeconds / totalSeconds) * 100;\n    return Math.min(100, Math.max(0, progress)).toFixed(3); // Clamp to valid range\n  }\n  \n  // If vigiliaLine hasn't started\n  return 0;\n}\n\n/**\n * Calculate the height percentage for bedtime progress during the day.\n *\n * @param {number} line - The current time \"line\" (hour) to compare against.\n * @param {Object} time - An object containing the current hour, minute, and second.\n * @param {number} time.hour - The current hour of the day (0-23).\n * @param {number} time.minute - The current minute of the hour (0-59).\n * @param {number} time.second - The current second of the minute (0-59).\n * @returns {number} - The height percentage (0-100).\n */\nexport function calculateDayBedtimeHeight(line, { hour, minute, second, isDay }) {\n  if (!isDay)\n    return 0;\n\n  // If the current line (hour) is later than the specified hour, return 100%.\n  if (line > hour) \n    return 100;\n\n  // If the current line (hour) matches the specified hour, calculate the percentage of the hour completed.\n  if (line === hour) {\n    const totalSeconds = 3600; // Total seconds in an hour\n    const elapsedSeconds = (minute * 60) + second; // Convert minutes and seconds to total elapsed seconds\n    const percentageCompleted = (elapsedSeconds / totalSeconds) * 100;\n    \n    const remainingPercentage = 100 - percentageCompleted; // Remaining percentage for the hour\n    return Math.min(100, Math.max(0, remainingPercentage)).toFixed(3); // Clamp to valid range\n  }\n\n  // If the current line (hour) is earlier than the specified hour, return 0%.\n  return 0;\n}\n\nexport function calculateNightBedtimeHeight(vigiliaLine, {vigilia, hour, minute, second, isDay}) {\n  if (isDay)\n    return 100;\n\n  // If the current vigiliaLine is later than the specified vigilia, return 100%.\n  if (vigiliaLine > vigilia)\n    return 100;\n\n  // If vigiliaLine is current\n  if (vigiliaLine === vigilia) {\n    // Check for invalid input scenario\n    if (hour < vigilia * 3)\n      throw new Error('The hour is earlier than the vigilia start');\n\n    const totalSeconds = 3600 * 3; // Total seconds in 1 vigilia\n    const elapsedSeconds = (hour - vigilia * 3) * 3600 + minute * 60 + second;\n    const percentageCompleted = (elapsedSeconds / totalSeconds) * 100;\n\n    const remainingPercentage = 100 - percentageCompleted; // Remaining percentage for the vigilia\n    return Math.min(100, Math.max(0, remainingPercentage)).toFixed(3); // Clamp to valid range\n  }\n\n  // If the current vigiliaLine is earlier than the specified vigilia, return 0%.\n  return 0;\n}\n", "/*\n  Copyright 2024-2025 Hora Solis project contributors\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport {\n  getHoursMinutesText,\n  getClockSpeedFractionsText,\n  getTimeText,\n  calculateDayHourProgress,\n  calculateNightVigiliaProgress,\n  calculateDayBedtimeHeight,\n  calculateNightBedtimeHeight\n} from './viewHelpers.mjs';\n\nimport {numbersText} from './locale.mjs';\n\nexport function clockView(clockViewData) {\n  const view = [];\n\n  view.push(`<div class=\"container mx-auto mb-4 sm:px-4\">`);\n\n  view.push(...naturalDayView(clockViewData));\n  view.push(...statusLinesView(clockViewData));\n\n  view.push(`</div>`);\n\n  return view;\n}\n\nfunction naturalDayView({naturalDay, naturalBedtime}) {\n  const view = []\n\n  view.push(`\n    <div class=\"mt-4 grid grid-cols-2 place-items-center text-center text-xs font-bold tracking-widest sm:mt-6 sm:text-sm lg:mt-8 lg:text-base\">\n      <div class=\"text-amber-500 dark:text-yellow-100\">TEMPUS \uD83C\uDF1E DIEI</div>\n      <div class=\"text-indigo-500 dark:text-purple-100\">TEMPUS \uD83C\uDF1A NOCTIS</div>\n    </div>\n  `);\n\n  view.push(`<div class=\"mt-1 grid grid-cols-2 gap-x-1 sm:mt-2 sm:gap-x-2 lg:gap-x-3\">`);\n\n  view.push(...dayTimeColumnView(naturalDay, naturalBedtime));\n  view.push(...nightTimeColumnView(naturalDay, naturalBedtime));\n\n  view.push(`</div>`);\n\n  view.push(...dayDurationView(naturalDay));\n\n  return view;\n}\n\nfunction dayTimeColumnView({hour, minute, second, isDay}, naturalBedtime) {\n  const view = []\n\n  // column start\n  view.push(`<div>`);\n\n  for (let line = 0; line < 12; line++) {\n    // Hour line start\n    view.push(`<div class=\"relative h-[48px] border-b-4 border-white bg-amber-200 lg:h-[56px] dark:border-stone-600 dark:bg-yellow-400\">`);\n\n    // Day progress\n    if (isDay) {\n      const height = calculateDayHourProgress(line, hour, minute, second);\n      view.push(`<div class=\"absolute top-0 z-10 w-full bg-amber-400 dark:bg-yellow-600\" style=\"height: ${height}%\"></div>`);\n    } else {\n      view.push(`<div class=\"absolute inset-0 top-0 z-10 bg-amber-400 dark:bg-yellow-600\"></div>`);\n    }\n\n    // Possible bedtime\n    const bedtimeHeight = calculateDayBedtimeHeight(line, naturalBedtime);\n\n    if (bedtimeHeight > 0) {\n      view.push(`<div class=\"absolute inset-x-10 bottom-0 z-20 bg-fuchsia-400/40 sm:inset-x-16 lg:inset-x-28 dark:bg-pink-400/40\" style=\"height: ${bedtimeHeight}%\">`);\n\n      if (bedtimeHeight >= 45)\n        view.push(`\n          <div class=\"absolute inset-x-3 inset-y-0 z-30 flex items-center justify-center text-center text-xs font-bold leading-none tracking-widest text-fuchsia-50 sm:text-sm dark:text-pink-50 ${(isDay && line === hour) ? 'max-md:hidden' : ''}\">\n            TEMPUS SOMNI\n          </div>\n        `);\n\n      view.push(`</div>`);\n    }\n\n    // Time text\n    const timeText = getTimeText(line, hour, minute, second, isDay);\n    view.push(`<div class=\"absolute inset-x-3 inset-y-0 z-40 flex items-center font-bold text-gray-800 lg:text-lg dark:text-yellow-50\">${timeText}</div>`);\n  \n    // Hour line end\n    view.push(`</div>`);\n  }\n\n  // column end\n  view.push(`</div>`);\n\n  return view;\n}\n\nfunction nightTimeColumnView({vigilia, hour, minute, second, isDay}, naturalBedtime) {\n  const view = []\n\n  // column start\n  view.push(`<div>`);\n\n  for (let vigiliaLine = 0; vigiliaLine < 4; vigiliaLine++) {\n    // 48*3 = 144, 56*3 = 168\n    view.push(`<div class=\"relative h-[144px] border-b-4 border-white bg-indigo-200 sm:mx-1 lg:h-[168px] dark:border-stone-600 dark:bg-purple-300\">`);\n\n    // Night progress\n    if (!isDay) {\n      const height = calculateNightVigiliaProgress(vigiliaLine, vigilia, hour, minute, second);\n      view.push(`<div class=\"absolute top-0 z-10 w-full bg-indigo-400 dark:bg-purple-500\" style=\"height: ${height}%\"></div>`);\n    }\n\n    // Possible bedtime\n    const bedtimeHeight = calculateNightBedtimeHeight(vigiliaLine, naturalBedtime);\n\n    if (bedtimeHeight > 0) {\n      view.push(`<div class=\"absolute inset-x-10 bottom-0 z-20 bg-fuchsia-300/40 sm:inset-x-16 lg:inset-x-28 dark:bg-rose-300/40\" style=\"height: ${bedtimeHeight}%\">`);\n\n      if ((bedtimeHeight >= 22 && bedtimeHeight <= 44) || bedtimeHeight >= 88) {\n        const perhapsHide = !isDay && hour >= vigiliaLine * 3 && hour <= (vigiliaLine + 1) * 3 && (((bedtimeHeight >= 22 && bedtimeHeight <= 44) && hour === vigiliaLine * 3 + 2) || (bedtimeHeight >= 88 && hour === vigiliaLine * 3 + 1));\n        view.push(`\n          <div class=\"absolute inset-x-3 inset-y-0 z-30 flex items-center justify-center text-center text-xs font-bold leading-none tracking-widest text-fuchsia-50 sm:text-sm dark:text-rose-50 ${perhapsHide ? 'max-md:hidden' : ''}\">\n            TEMPUS SOMNI\n          </div>\n        `);\n      }\n\n      view.push(`</div>`);\n    } // end of bedtime\n\n    // vigilia right side label\n    view.push(`\n      <div class=\"absolute inset-x-2 inset-y-0 z-30 text-center text-xs font-extrabold leading-none tracking-widest text-gray-50 lg:text-sm dark:text-purple-50\" style=\"writing-mode: vertical-rl; text-orientation: sideways;\">\n        VIGILIA&ensp;${numbersText[vigiliaLine].toUpperCase()}\n      </div>\n    `);\n\n    // Hour blocks\n    for (let line = 0; line < 3; line++) {\n      // Hour line start\n      view.push(`<div class=\"relative z-40 mr-8 h-[48px] border-b-4 ${line < 2 ? 'border-dashed border-white dark:border-stone-600' : 'border-transparent'} lg:h-[56px]\">`);\n\n      // Time text\n      const timeText = getTimeText(vigiliaLine * 3 + line, hour, minute, second, !isDay);\n      view.push(`<div class=\"absolute inset-x-3 inset-y-0 z-50 flex items-center font-bold text-gray-800 lg:text-lg dark:text-purple-50\">${timeText}</div>`);\n    \n      // Hour line end\n      view.push(`</div>`);\n    }\n\n    view.push(`</div>`); // end of vigilia block\n  }\n\n  view.push(`</div>`); // end of column\n\n  return view;\n}\n\nfunction dayDurationView({dayMilliseconds, nightMilliseconds, isDay}) {\n  const totalDuration = dayMilliseconds + nightMilliseconds;\n  const percentDay = Math.min(100, Math.max(0, (dayMilliseconds / totalDuration) * 100)).toFixed(3); // Clamp to valid range\n\n  // Margin reduced by 4px because of the hours list in the previous block\n  return [`\n    <div class=\"mt-3 text-center text-xs font-bold tracking-widest text-gray-600 sm:mt-5 sm:text-sm lg:mt-7 lg:text-base dark:text-stone-100\">\n      <span class=\"text-amber-500 dark:text-yellow-100\">DIU \uD83C\uDF1E</span> ET <span class=\"text-indigo-500 dark:text-purple-100\">NOX \uD83C\uDF1A</span> DURATIO\n    </div>\n\n    <div class=\"mt-1 flex items-center justify-center text-center text-sm font-bold text-gray-600 sm:mt-2 sm:text-base lg:text-lg\">\n      <div class=\"relative h-10 w-full bg-indigo-200 sm:w-1/2 lg:h-12 dark:bg-purple-300\">\n        <div class=\"absolute left-0 flex h-full items-center justify-center ${isDay ? 'bg-amber-200 dark:bg-yellow-400' : 'bg-amber-400 dark:bg-yellow-600'} dark:text-purple-50\" style=\"width: ${percentDay}%\">\n          ${getHoursMinutesText(dayMilliseconds)}<br>\n        </div>\n        <div class=\"absolute right-0 flex h-full items-center justify-center dark:text-yellow-50\" style=\"width: ${100 - percentDay}%\">\n          ${getHoursMinutesText(nightMilliseconds)}<br>\n        </div>\n      </div>\n    </div>\n  `];\n}\n\nfunction statusLinesView({now, naturalDay, bedtime}) {\n  const {sunrise, sunset, nextSunrise, secondDuration} = naturalDay;\n  \n  return [`\n    <div class=\"mt-4 text-center text-sm text-black sm:mt-5 sm:text-lg lg:mt-6 lg:text-xl dark:text-stone-50\">\n\n      <div class=\"mt-1 lg:mt-2\">\n        Dies civilis \uD83C\uDFDB\uFE0F&nbsp;${now.toLocaleString(navigator.languages, {dateStyle: 'medium', timeStyle: 'short'})}\n      </div>\n\n      <div>\n        <div class=\"mt-1 block sm:inline-block sm:px-1 lg:mt-2\">\n           Ortus solis \uD83C\uDF05&nbsp;${sunrise.toLocaleString(navigator.languages, {timeStyle: 'short'})}\n        </div>\n\n        <div class=\"mt-1 block sm:inline-block sm:px-1 lg:mt-2\">\n          Occasus solis \uD83C\uDF07&nbsp;${sunset.toLocaleString(navigator.languages, {timeStyle: 'short'})}\n        </div>\n      </div>\n\n      <div class=\"mt-1 lg:mt-2\">\n        Tempus ad somnum quaerendum \uD83D\uDECF\uFE0F&nbsp;${bedtime.toLocaleString(navigator.languages, {timeStyle: 'short'})}\n      </div>\n\n      <div class=\"mt-1 lg:mt-2\">\n        Ortus solis diei sequentis \u23ED\uFE0F\uD83C\uDF05&nbsp;${nextSunrise.toLocaleString(navigator.languages, {timeStyle: 'short'})}\n      </div>\n\n      <div class=\"mt-1 lg:mt-2\">\n        ${getClockSpeedFractionsText(secondDuration)}\n      </div>\n\n    </div>\n  `];\n}\n", "/*\n  Copyright 2024-2025 Hora Solis project contributors\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport { getNaturalDay } from \"./romanClock.mjs\";\nimport { locateUser } from \"./lib.mjs\";\nimport { clockView } from \"./view.mjs\";\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  document.getElementById('details-toggle').addEventListener('click', function () {\n    const block = document.getElementById('details-section');\n    const isHidden = block.classList.contains('hidden');\n    block.classList.toggle('hidden');\n    this.textContent = isHidden ? 'Fold this description' : '\uD83E\uDD37 Quid est hoc?';\n  });\n\n  locateUser()\n    .then(\n      (position) => {\n        runClock(position);\n      },\n      (error) => {\n        console.log('Error in locateUser().then()', error);\n      }\n    )\n    .catch((error) => {\n      console.log('Error in locateUser()', error);\n    });\n});\n\nfunction runClock(position) {\n  const now = Temporal.Now.zonedDateTimeISO();\n  const naturalDay = getNaturalDay(position, now);\n\n  const {isPolarPhenomenon} = naturalDay;\n\n  const view = [];\n\n  if (isPolarPhenomenon) {\n    view.push('Phaenomenon polare eo die fit \uD83D\uDC27');\n  } else {\n    const {nextSunrise, calculateTimeWithin, durationUntilNextSecond} = naturalDay;\n    const bedtime = nextSunrise.subtract({hours: 8, minutes: 20});\n    const naturalBedtime = calculateTimeWithin(bedtime);\n\n    view.push(...clockView({now, naturalDay, bedtime, naturalBedtime}));;\n\n    setTimeout(() => {\n      runClock(position);\n    }, durationUntilNextSecond);\n  }\n\n  document.getElementById('time-display').innerHTML = view.join('');\n}\n"],
  "mappings": "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",
  "names": ["calcTimeJulianCent", "jd", "T", "isLeapYear", "yr", "calcDateFromJD", "jd", "z", "f", "A", "alpha", "B", "C", "D", "E", "day", "month", "year", "calcDoyFromJD", "date", "k", "doy", "radToDeg", "angleRad", "degToRad", "angleDeg", "calcGeomMeanLongSun", "t", "L0", "calcGeomMeanAnomalySun", "M", "calcEccentricityEarthOrbit", "calcSunEqOfCenter", "m", "mrad", "sinm", "sin2m", "sin3m", "calcSunTrueLong", "l0", "c", "O", "calcSunTrueAnomaly", "v", "calcSunRadVector", "e", "R", "calcSunApparentLong", "o", "omega", "lambda", "calcMeanObliquityOfEcliptic", "seconds", "e0", "calcObliquityCorrection", "calcSunDeclination", "t", "calcObliquityCorrection", "lambda", "calcSunApparentLong", "sint", "degToRad", "theta", "radToDeg", "calcEquationOfTime", "epsilon", "l0", "calcGeomMeanLongSun", "e", "calcEccentricityEarthOrbit", "m", "calcGeomMeanAnomalySun", "y", "sin2l0", "sinm", "cos2l0", "sin4l0", "sin2m", "Etime", "calcHourAngleSunrise", "lat", "solarDec", "latRad", "sdRad", "HAarg", "HA", "getJD", "year", "month", "day", "A", "B", "JD", "calcRefraction", "elev", "correction", "te", "calcAzEl", "T", "localtime", "latitude", "longitude", "zone", "eqTime", "solarTimeFix", "earthRadVec", "calcSunRadVector", "trueSolarTime", "hourAngle", "haRad", "csz", "zenith", "azDenom", "azimuth", "azRad", "exoatmElevation", "refractionCorrection", "solarZen", "elevation", "calcSunriseSetUTC", "rise", "JD", "latitude", "longitude", "calcTimeJulianCent", "eqTime", "calcEquationOfTime", "solarDec", "calcSunDeclination", "hourAngle", "calcHourAngleSunrise", "delta", "radToDeg", "timeUTC", "calcSunriseSet", "timezone", "newTimeUTC", "azimuth", "timeLocal", "doy", "calcDoyFromJD", "jday", "calcJDofNextPrevRiseSet", "riseT", "riseAzEl", "calcAzEl", "increment", "next", "tz", "julianday", "time", "incr", "sunriseSetToTemporal", "julianDate", "timeZone", "year", "month", "day", "calcDateFromJD", "totalSeconds", "hour", "minute", "second", "millisecond", "calculateSolarEvents", "dateTime", "getJD", "tzOffsetFloat", "clampedLatitude", "sunrise", "sunset", "checkIfPolarPhenomenon", "eventTime", "targetTime", "eventDate", "targetDate", "getSolarEvents", "position", "now", "sunrise", "sunset", "calculateSolarEvents", "yesterday", "prevSunrise", "prevSunset", "tomorrow", "nextSunrise", "calculateTime", "from", "to", "intervalDuration", "elapsedTime", "secondDuration", "minuteDuration", "hourDuration", "hour", "fullHoursMilliseconds", "minute", "second", "elapsedMilliseconds", "durationUntilNextSecond", "calculateIntervalDuration", "getNaturalDay", "isPolarPhenomenon", "isDay", "dayMilliseconds", "nightMilliseconds", "calculateTimeWithin", "point", "vigilia", "timeZoneLocations", "getCurrentTimezonePosition", "location", "locateUser", "storedLocationRaw", "storedLocation", "maximumAge", "timezonePosition", "getCurrentTimezonePosition", "resolve", "reject", "position", "timestamp", "latitude", "longitude", "simplifiedPosition", "error", "numbersLatin", "numbersText", "getHoursMinutesText", "milliseconds", "seconds", "hours", "minutes", "getTimeText", "i", "hour", "minute", "second", "isCurrentInterval", "hourNumber", "numbersLatin", "getClockSpeedFractionsText", "romanSecond", "speedScale", "closestFraction", "findClosestFraction", "fractionNames", "fractionDecimalValues", "i", "a", "b", "n", "closestKey", "smallestDifference", "key", "difference", "calculateDayHourProgress", "line", "hour", "minute", "second", "progress", "calculateNightVigiliaProgress", "vigiliaLine", "vigilia", "elapsedSeconds", "totalSeconds", "calculateDayBedtimeHeight", "isDay", "remainingPercentage", "calculateNightBedtimeHeight", "clockView", "clockViewData", "view", "naturalDayView", "statusLinesView", "naturalDay", "naturalBedtime", "dayTimeColumnView", "nightTimeColumnView", "dayDurationView", "hour", "minute", "second", "isDay", "line", "height", "calculateDayHourProgress", "bedtimeHeight", "calculateDayBedtimeHeight", "timeText", "getTimeText", "vigilia", "vigiliaLine", "calculateNightVigiliaProgress", "calculateNightBedtimeHeight", "perhapsHide", "numbersText", "dayMilliseconds", "nightMilliseconds", "totalDuration", "percentDay", "getHoursMinutesText", "now", "bedtime", "sunrise", "sunset", "nextSunrise", "secondDuration", "getClockSpeedFractionsText", "block", "isHidden", "locateUser", "position", "runClock", "error", "now", "naturalDay", "getNaturalDay", "isPolarPhenomenon", "view", "nextSunrise", "calculateTimeWithin", "durationUntilNextSecond", "bedtime", "naturalBedtime", "clockView"]
}
